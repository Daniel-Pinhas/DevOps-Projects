apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
  labels:
    app: flask
spec:
  replicas: 6
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
        - name: flask
          image: danielpinhas/flask-k8s
          ports:
            - containerPort: 5000
          env:
            - name: USER_NAME
              value: daniel
            - name: USER_PWD
              value: daniel
            - name: DB_URL
              value: "mysql-service:3306"
        - name: flask2
          image: danielpinhas/flask2-k8s
          ports:
            - containerPort: 5000
          env:
            - name: USER_NAME
              value: daniel
            - name: USER_PWD
              value: daniel
            - name: DB_URL
              value: "mysql-service:3306"
        - name: flask3
          image: danielpinhas/flask3-k8s
          ports:
            - containerPort: 5000
          env:
            - name: USER_NAME
              value: daniel
            - name: USER_PWD
              value: daniel
            - name: DB_URL
              value: "mysql-service:3306"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
      
---
apiVersion: v1
kind: Service
metadata:
  name: flask-service
spec:
  type: NodePort
  selector:
    app: flask
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      nodePort: 31000
---
apiVersion: v1
kind: Service
metadata:
  name: flask2-service
spec:
  type: NodePort
  selector:
    app: flask
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      nodePort: 31100
---
apiVersion: v1
kind: Service
metadata:
  name: flask3-service
spec:
  type: NodePort
  selector:
    app: flask
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      nodePort: 31200